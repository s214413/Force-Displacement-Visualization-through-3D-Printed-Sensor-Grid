clear all;
clc;

% Declaring variables
syms R11 R12 R13 R21 R22 R23 R31 R32 R33

% The measured resistances for a 3 by 3 sensor grid
MR11 = 9658.43;
MR12 = 27496.3;
MR13 = 194177;
MR21 = 27496.3;
MR22 = 58406.6;
MR23 = 200271;
MR31 = 194177;
MR32 = 200271;
MR33 = 253233;

% The equations for the resistance R11 to R33 
eqr(1) = (1327444511382569*(R12*R13*R21*R22 + R12*R13*R21*R23 + R12*R13*R22*R23 + R12*R13*R21*R32 + R12*R13*R22*R31 + R12*R13*R21*R33 + R12*R13*R23*R31 + R12*R13*R22*R33 + R12*R13*R23*R32 + R12*R21*R22*R31 + R12*R21*R23*R31 + R13*R21*R22*R31 + R12*R13*R31*R32 + R12*R21*R22*R33 + R12*R22*R23*R31 + R13*R21*R22*R32 + R13*R21*R23*R31 + R12*R13*R31*R33 + R12*R21*R23*R33 + R13*R21*R23*R32 + R13*R22*R23*R31 + R12*R13*R32*R33 + R12*R22*R23*R33 + R13*R22*R23*R32 + R12*R21*R31*R32 + R12*R21*R31*R33 + R13*R21*R31*R32 + R12*R21*R32*R33 + R12*R23*R31*R32 + R13*R21*R31*R33 + R13*R22*R31*R32 + R12*R23*R31*R33 + R13*R21*R32*R33 + R13*R22*R31*R33 + R12*R23*R32*R33 + R13*R22*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R23*R31*R32 + R21*R22*R32*R33 + R21*R23*R31*R33 + R22*R23*R31*R32 + R21*R23*R32*R33 + R22*R23*R31*R33 + R22*R23*R32*R33))/(137438953472*((R12*R13*R21*R22 + R12*R13*R21*R23 + R12*R13*R22*R23 + R12*R13*R21*R32 + R12*R13*R22*R31 + R12*R13*R21*R33 + R12*R13*R23*R31 + R12*R13*R22*R33 + R12*R13*R23*R32 + R12*R21*R22*R31 + R12*R21*R23*R31 + R13*R21*R22*R31 + R12*R13*R31*R32 + R12*R21*R22*R33 + R12*R22*R23*R31 + R13*R21*R22*R32 + R13*R21*R23*R31 + R12*R13*R31*R33 + R12*R21*R23*R33 + R13*R21*R23*R32 + R13*R22*R23*R31 + R12*R13*R32*R33 + R12*R22*R23*R33 + R13*R22*R23*R32 + R12*R21*R31*R32 + R12*R21*R31*R33 + R13*R21*R31*R32 + R12*R21*R32*R33 + R12*R23*R31*R32 + R13*R21*R31*R33 + R13*R22*R31*R32 + R12*R23*R31*R33 + R13*R21*R32*R33 + R13*R22*R31*R33 + R12*R23*R32*R33 + R13*R22*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R23*R31*R32 + R21*R22*R32*R33 + R21*R23*R31*R33 + R22*R23*R31*R32 + R21*R23*R32*R33 + R22*R23*R31*R33 + R22*R23*R32*R33)/(R12*R21*R22 + R12*R21*R23 + R13*R21*R22 + R12*R22*R23 + R13*R21*R23 + R13*R22*R23 + R12*R21*R32 + R12*R22*R31 + R12*R21*R33 + R12*R23*R31 + R13*R21*R32 + R13*R22*R31 + R12*R22*R33 + R12*R23*R32 + R13*R21*R33 + R13*R23*R31 + R13*R22*R33 + R13*R23*R32 + R12*R31*R32 + R21*R22*R32 + R12*R31*R33 + R13*R31*R32 + R21*R22*R33 + R21*R23*R32 + R12*R32*R33 + R13*R31*R33 + R21*R23*R33 + R22*R23*R32 + R13*R32*R33 + R22*R23*R33 + R22*R31*R32 + R22*R31*R33 + R23*R31*R32 + R22*R32*R33 + R23*R31*R33 + R23*R32*R33) - 1327444511382569/137438953472)*(R12*R21*R22 + R12*R21*R23 + R13*R21*R22 + R12*R22*R23 + R13*R21*R23 + R13*R22*R23 + R12*R21*R32 + R12*R22*R31 + R12*R21*R33 + R12*R23*R31 + R13*R21*R32 + R13*R22*R31 + R12*R22*R33 + R12*R23*R32 + R13*R21*R33 + R13*R23*R31 + R13*R22*R33 + R13*R23*R32 + R12*R31*R32 + R21*R22*R32 + R12*R31*R33 + R13*R31*R32 + R21*R22*R33 + R21*R23*R32 + R12*R32*R33 + R13*R31*R33 + R21*R23*R33 + R22*R23*R32 + R13*R32*R33 + R22*R23*R33 + R22*R31*R32 + R22*R31*R33 + R23*R31*R32 + R22*R32*R33 + R23*R31*R33 + R23*R32*R33)) - R11;
eqr(2) = (7558125392704307*(R11*R13*R21*R22 + R11*R13*R21*R23 + R11*R13*R22*R23 + R11*R13*R21*R32 + R11*R13*R22*R31 + R11*R13*R21*R33 + R11*R13*R23*R31 + R11*R13*R22*R33 + R11*R13*R23*R32 + R11*R21*R22*R32 + R11*R13*R31*R32 + R11*R21*R22*R33 + R11*R21*R23*R32 + R13*R21*R22*R31 + R11*R13*R31*R33 + R11*R21*R23*R33 + R11*R22*R23*R32 + R13*R21*R22*R32 + R13*R21*R23*R31 + R11*R13*R32*R33 + R11*R22*R23*R33 + R13*R21*R23*R32 + R13*R22*R23*R31 + R13*R22*R23*R32 + R11*R22*R31*R32 + R11*R22*R31*R33 + R11*R23*R31*R32 + R13*R21*R31*R32 + R11*R22*R32*R33 + R11*R23*R31*R33 + R13*R21*R31*R33 + R13*R22*R31*R32 + R11*R23*R32*R33 + R13*R21*R32*R33 + R13*R22*R31*R33 + R13*R22*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R23*R31*R32 + R21*R22*R32*R33 + R21*R23*R31*R33 + R22*R23*R31*R32 + R21*R23*R32*R33 + R22*R23*R31*R33 + R22*R23*R32*R33))/(274877906944*((R11*R13*R21*R22 + R11*R13*R21*R23 + R11*R13*R22*R23 + R11*R13*R21*R32 + R11*R13*R22*R31 + R11*R13*R21*R33 + R11*R13*R23*R31 + R11*R13*R22*R33 + R11*R13*R23*R32 + R11*R21*R22*R32 + R11*R13*R31*R32 + R11*R21*R22*R33 + R11*R21*R23*R32 + R13*R21*R22*R31 + R11*R13*R31*R33 + R11*R21*R23*R33 + R11*R22*R23*R32 + R13*R21*R22*R32 + R13*R21*R23*R31 + R11*R13*R32*R33 + R11*R22*R23*R33 + R13*R21*R23*R32 + R13*R22*R23*R31 + R13*R22*R23*R32 + R11*R22*R31*R32 + R11*R22*R31*R33 + R11*R23*R31*R32 + R13*R21*R31*R32 + R11*R22*R32*R33 + R11*R23*R31*R33 + R13*R21*R31*R33 + R13*R22*R31*R32 + R11*R23*R32*R33 + R13*R21*R32*R33 + R13*R22*R31*R33 + R13*R22*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R23*R31*R32 + R21*R22*R32*R33 + R21*R23*R31*R33 + R22*R23*R31*R32 + R21*R23*R32*R33 + R22*R23*R31*R33 + R22*R23*R32*R33)/(R11*R21*R22 + R11*R21*R23 + R11*R22*R23 + R13*R21*R22 + R13*R21*R23 + R13*R22*R23 + R11*R21*R32 + R11*R22*R31 + R11*R21*R33 + R11*R23*R31 + R11*R22*R33 + R11*R23*R32 + R13*R21*R32 + R13*R22*R31 + R13*R21*R33 + R13*R23*R31 + R13*R22*R33 + R13*R23*R32 + R11*R31*R32 + R21*R22*R31 + R11*R31*R33 + R21*R23*R31 + R11*R32*R33 + R13*R31*R32 + R21*R22*R33 + R22*R23*R31 + R13*R31*R33 + R21*R23*R33 + R13*R32*R33 + R22*R23*R33 + R21*R31*R32 + R21*R31*R33 + R21*R32*R33 + R23*R31*R32 + R23*R31*R33 + R23*R32*R33) - 7558125392704307/274877906944)*(R11*R21*R22 + R11*R21*R23 + R11*R22*R23 + R13*R21*R22 + R13*R21*R23 + R13*R22*R23 + R11*R21*R32 + R11*R22*R31 + R11*R21*R33 + R11*R23*R31 + R11*R22*R33 + R11*R23*R32 + R13*R21*R32 + R13*R22*R31 + R13*R21*R33 + R13*R23*R31 + R13*R22*R33 + R13*R23*R32 + R11*R31*R32 + R21*R22*R31 + R11*R31*R33 + R21*R23*R31 + R11*R32*R33 + R13*R31*R32 + R21*R22*R33 + R22*R23*R31 + R13*R31*R33 + R21*R23*R33 + R13*R32*R33 + R22*R23*R33 + R21*R31*R32 + R21*R31*R33 + R21*R32*R33 + R23*R31*R32 + R23*R31*R33 + R23*R32*R33)) - R12;
eqr(3) = (194177*(R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R12*R22*R23 + R11*R12*R21*R32 + R11*R12*R22*R31 + R11*R12*R21*R33 + R11*R12*R23*R31 + R11*R12*R22*R33 + R11*R12*R23*R32 + R11*R12*R31*R32 + R11*R21*R22*R32 + R12*R21*R22*R31 + R11*R12*R31*R33 + R11*R21*R22*R33 + R11*R21*R23*R32 + R12*R21*R23*R31 + R11*R12*R32*R33 + R11*R21*R23*R33 + R11*R22*R23*R32 + R12*R21*R22*R33 + R12*R22*R23*R31 + R11*R22*R23*R33 + R12*R21*R23*R33 + R12*R22*R23*R33 + R11*R22*R31*R32 + R12*R21*R31*R32 + R11*R22*R31*R33 + R11*R23*R31*R32 + R12*R21*R31*R33 + R11*R22*R32*R33 + R11*R23*R31*R33 + R12*R21*R32*R33 + R12*R23*R31*R32 + R11*R23*R32*R33 + R12*R23*R31*R33 + R12*R23*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R23*R31*R32 + R21*R22*R32*R33 + R21*R23*R31*R33 + R22*R23*R31*R32 + R21*R23*R32*R33 + R22*R23*R31*R33 + R22*R23*R32*R33))/(((R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R12*R22*R23 + R11*R12*R21*R32 + R11*R12*R22*R31 + R11*R12*R21*R33 + R11*R12*R23*R31 + R11*R12*R22*R33 + R11*R12*R23*R32 + R11*R12*R31*R32 + R11*R21*R22*R32 + R12*R21*R22*R31 + R11*R12*R31*R33 + R11*R21*R22*R33 + R11*R21*R23*R32 + R12*R21*R23*R31 + R11*R12*R32*R33 + R11*R21*R23*R33 + R11*R22*R23*R32 + R12*R21*R22*R33 + R12*R22*R23*R31 + R11*R22*R23*R33 + R12*R21*R23*R33 + R12*R22*R23*R33 + R11*R22*R31*R32 + R12*R21*R31*R32 + R11*R22*R31*R33 + R11*R23*R31*R32 + R12*R21*R31*R33 + R11*R22*R32*R33 + R11*R23*R31*R33 + R12*R21*R32*R33 + R12*R23*R31*R32 + R11*R23*R32*R33 + R12*R23*R31*R33 + R12*R23*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R23*R31*R32 + R21*R22*R32*R33 + R21*R23*R31*R33 + R22*R23*R31*R32 + R21*R23*R32*R33 + R22*R23*R31*R33 + R22*R23*R32*R33)/(R11*R21*R22 + R11*R21*R23 + R12*R21*R22 + R11*R22*R23 + R12*R21*R23 + R12*R22*R23 + R11*R21*R32 + R11*R22*R31 + R11*R21*R33 + R11*R23*R31 + R12*R21*R32 + R12*R22*R31 + R11*R22*R33 + R11*R23*R32 + R12*R21*R33 + R12*R23*R31 + R12*R22*R33 + R12*R23*R32 + R11*R31*R32 + R21*R22*R31 + R11*R31*R33 + R12*R31*R32 + R21*R22*R32 + R21*R23*R31 + R11*R32*R33 + R12*R31*R33 + R21*R23*R32 + R22*R23*R31 + R12*R32*R33 + R22*R23*R32 + R21*R31*R32 + R21*R31*R33 + R22*R31*R32 + R21*R32*R33 + R22*R31*R33 + R22*R32*R33) - 194177)*(R11*R21*R22 + R11*R21*R23 + R12*R21*R22 + R11*R22*R23 + R12*R21*R23 + R12*R22*R23 + R11*R21*R32 + R11*R22*R31 + R11*R21*R33 + R11*R23*R31 + R12*R21*R32 + R12*R22*R31 + R11*R22*R33 + R11*R23*R32 + R12*R21*R33 + R12*R23*R31 + R12*R22*R33 + R12*R23*R32 + R11*R31*R32 + R21*R22*R31 + R11*R31*R33 + R12*R31*R32 + R21*R22*R32 + R21*R23*R31 + R11*R32*R33 + R12*R31*R33 + R21*R23*R32 + R22*R23*R31 + R12*R32*R33 + R22*R23*R32 + R21*R31*R32 + R21*R31*R33 + R22*R31*R32 + R21*R32*R33 + R22*R31*R33 + R22*R32*R33)) - R13;
eqr(4) = (7558125392704307*(R11*R12*R22*R23 + R11*R13*R22*R23 + R12*R13*R22*R23 + R11*R12*R22*R31 + R11*R12*R23*R31 + R11*R13*R22*R31 + R11*R12*R22*R33 + R11*R12*R23*R32 + R11*R13*R23*R31 + R12*R13*R22*R31 + R11*R13*R22*R33 + R11*R13*R23*R32 + R12*R13*R23*R31 + R12*R13*R22*R33 + R12*R13*R23*R32 + R11*R12*R31*R32 + R11*R12*R31*R33 + R11*R13*R31*R32 + R11*R12*R32*R33 + R11*R13*R31*R33 + R11*R22*R23*R32 + R12*R13*R31*R32 + R12*R22*R23*R31 + R11*R13*R32*R33 + R11*R22*R23*R33 + R12*R13*R31*R33 + R13*R22*R23*R31 + R12*R13*R32*R33 + R12*R22*R23*R33 + R13*R22*R23*R32 + R11*R22*R31*R32 + R11*R22*R31*R33 + R11*R23*R31*R32 + R11*R22*R32*R33 + R11*R23*R31*R33 + R12*R23*R31*R32 + R13*R22*R31*R32 + R11*R23*R32*R33 + R12*R23*R31*R33 + R13*R22*R31*R33 + R12*R23*R32*R33 + R13*R22*R32*R33 + R22*R23*R31*R32 + R22*R23*R31*R33 + R22*R23*R32*R33))/(274877906944*((R11*R12*R22*R23 + R11*R13*R22*R23 + R12*R13*R22*R23 + R11*R12*R22*R31 + R11*R12*R23*R31 + R11*R13*R22*R31 + R11*R12*R22*R33 + R11*R12*R23*R32 + R11*R13*R23*R31 + R12*R13*R22*R31 + R11*R13*R22*R33 + R11*R13*R23*R32 + R12*R13*R23*R31 + R12*R13*R22*R33 + R12*R13*R23*R32 + R11*R12*R31*R32 + R11*R12*R31*R33 + R11*R13*R31*R32 + R11*R12*R32*R33 + R11*R13*R31*R33 + R11*R22*R23*R32 + R12*R13*R31*R32 + R12*R22*R23*R31 + R11*R13*R32*R33 + R11*R22*R23*R33 + R12*R13*R31*R33 + R13*R22*R23*R31 + R12*R13*R32*R33 + R12*R22*R23*R33 + R13*R22*R23*R32 + R11*R22*R31*R32 + R11*R22*R31*R33 + R11*R23*R31*R32 + R11*R22*R32*R33 + R11*R23*R31*R33 + R12*R23*R31*R32 + R13*R22*R31*R32 + R11*R23*R32*R33 + R12*R23*R31*R33 + R13*R22*R31*R33 + R12*R23*R32*R33 + R13*R22*R32*R33 + R22*R23*R31*R32 + R22*R23*R31*R33 + R22*R23*R32*R33)/(R11*R12*R22 + R11*R12*R23 + R11*R13*R22 + R11*R13*R23 + R12*R13*R22 + R12*R13*R23 + R11*R12*R32 + R11*R12*R33 + R11*R13*R32 + R11*R13*R33 + R12*R13*R32 + R12*R13*R33 + R11*R22*R32 + R12*R22*R31 + R11*R22*R33 + R11*R23*R32 + R12*R23*R31 + R13*R22*R31 + R11*R23*R33 + R12*R22*R33 + R13*R22*R32 + R13*R23*R31 + R12*R23*R33 + R13*R23*R32 + R12*R31*R32 + R12*R31*R33 + R13*R31*R32 + R12*R32*R33 + R13*R31*R33 + R13*R32*R33 + R22*R31*R32 + R22*R31*R33 + R23*R31*R32 + R22*R32*R33 + R23*R31*R33 + R23*R32*R33) - 7558125392704307/274877906944)*(R11*R12*R22 + R11*R12*R23 + R11*R13*R22 + R11*R13*R23 + R12*R13*R22 + R12*R13*R23 + R11*R12*R32 + R11*R12*R33 + R11*R13*R32 + R11*R13*R33 + R12*R13*R32 + R12*R13*R33 + R11*R22*R32 + R12*R22*R31 + R11*R22*R33 + R11*R23*R32 + R12*R23*R31 + R13*R22*R31 + R11*R23*R33 + R12*R22*R33 + R13*R22*R32 + R13*R23*R31 + R12*R23*R33 + R13*R23*R32 + R12*R31*R32 + R12*R31*R33 + R13*R31*R32 + R12*R32*R33 + R13*R31*R33 + R13*R32*R33 + R22*R31*R32 + R22*R31*R33 + R23*R31*R32 + R22*R32*R33 + R23*R31*R33 + R23*R32*R33)) - R21;
eqr(5) = (8027341979857715*(R11*R12*R21*R23 + R11*R13*R21*R23 + R12*R13*R21*R23 + R11*R12*R21*R32 + R11*R12*R21*R33 + R11*R12*R23*R31 + R11*R13*R21*R32 + R11*R12*R23*R32 + R11*R13*R21*R33 + R11*R13*R23*R31 + R12*R13*R21*R32 + R11*R13*R23*R32 + R12*R13*R21*R33 + R12*R13*R23*R31 + R12*R13*R23*R32 + R11*R12*R31*R32 + R11*R12*R31*R33 + R11*R13*R31*R32 + R11*R21*R23*R32 + R12*R21*R23*R31 + R11*R12*R32*R33 + R11*R13*R31*R33 + R11*R21*R23*R33 + R12*R13*R31*R32 + R13*R21*R23*R31 + R11*R13*R32*R33 + R12*R13*R31*R33 + R12*R21*R23*R33 + R13*R21*R23*R32 + R12*R13*R32*R33 + R12*R21*R31*R32 + R11*R23*R31*R32 + R12*R21*R31*R33 + R13*R21*R31*R32 + R11*R23*R31*R33 + R12*R21*R32*R33 + R12*R23*R31*R32 + R13*R21*R31*R33 + R11*R23*R32*R33 + R12*R23*R31*R33 + R13*R21*R32*R33 + R12*R23*R32*R33 + R21*R23*R31*R32 + R21*R23*R31*R33 + R21*R23*R32*R33))/(137438953472*((R11*R12*R21*R23 + R11*R13*R21*R23 + R12*R13*R21*R23 + R11*R12*R21*R32 + R11*R12*R21*R33 + R11*R12*R23*R31 + R11*R13*R21*R32 + R11*R12*R23*R32 + R11*R13*R21*R33 + R11*R13*R23*R31 + R12*R13*R21*R32 + R11*R13*R23*R32 + R12*R13*R21*R33 + R12*R13*R23*R31 + R12*R13*R23*R32 + R11*R12*R31*R32 + R11*R12*R31*R33 + R11*R13*R31*R32 + R11*R21*R23*R32 + R12*R21*R23*R31 + R11*R12*R32*R33 + R11*R13*R31*R33 + R11*R21*R23*R33 + R12*R13*R31*R32 + R13*R21*R23*R31 + R11*R13*R32*R33 + R12*R13*R31*R33 + R12*R21*R23*R33 + R13*R21*R23*R32 + R12*R13*R32*R33 + R12*R21*R31*R32 + R11*R23*R31*R32 + R12*R21*R31*R33 + R13*R21*R31*R32 + R11*R23*R31*R33 + R12*R21*R32*R33 + R12*R23*R31*R32 + R13*R21*R31*R33 + R11*R23*R32*R33 + R12*R23*R31*R33 + R13*R21*R32*R33 + R12*R23*R32*R33 + R21*R23*R31*R32 + R21*R23*R31*R33 + R21*R23*R32*R33)/(R11*R12*R21 + R11*R13*R21 + R11*R12*R23 + R12*R13*R21 + R11*R13*R23 + R12*R13*R23 + R11*R12*R31 + R11*R13*R31 + R11*R12*R33 + R12*R13*R31 + R11*R13*R33 + R12*R13*R33 + R11*R21*R32 + R12*R21*R31 + R11*R21*R33 + R13*R21*R31 + R11*R23*R32 + R12*R21*R33 + R12*R23*R31 + R13*R21*R32 + R11*R23*R33 + R13*R23*R31 + R12*R23*R33 + R13*R23*R32 + R11*R31*R32 + R11*R31*R33 + R11*R32*R33 + R13*R31*R32 + R13*R31*R33 + R13*R32*R33 + R21*R31*R32 + R21*R31*R33 + R21*R32*R33 + R23*R31*R32 + R23*R31*R33 + R23*R32*R33) - 8027341979857715/137438953472)*(R11*R12*R21 + R11*R13*R21 + R11*R12*R23 + R12*R13*R21 + R11*R13*R23 + R12*R13*R23 + R11*R12*R31 + R11*R13*R31 + R11*R12*R33 + R12*R13*R31 + R11*R13*R33 + R12*R13*R33 + R11*R21*R32 + R12*R21*R31 + R11*R21*R33 + R13*R21*R31 + R11*R23*R32 + R12*R21*R33 + R12*R23*R31 + R13*R21*R32 + R11*R23*R33 + R13*R23*R31 + R12*R23*R33 + R13*R23*R32 + R11*R31*R32 + R11*R31*R33 + R11*R32*R33 + R13*R31*R32 + R13*R31*R33 + R13*R32*R33 + R21*R31*R32 + R21*R31*R33 + R21*R32*R33 + R23*R31*R32 + R23*R31*R33 + R23*R32*R33)) - R22;
eqr(6) = (200271*(R11*R12*R21*R22 + R11*R13*R21*R22 + R12*R13*R21*R22 + R11*R12*R21*R32 + R11*R12*R22*R31 + R11*R12*R21*R33 + R11*R13*R21*R32 + R11*R13*R22*R31 + R11*R12*R22*R33 + R11*R13*R21*R33 + R12*R13*R21*R32 + R12*R13*R22*R31 + R11*R13*R22*R33 + R12*R13*R21*R33 + R12*R13*R22*R33 + R11*R12*R31*R32 + R11*R21*R22*R32 + R12*R21*R22*R31 + R11*R12*R31*R33 + R11*R13*R31*R32 + R11*R21*R22*R33 + R13*R21*R22*R31 + R11*R12*R32*R33 + R11*R13*R31*R33 + R12*R13*R31*R32 + R12*R21*R22*R33 + R13*R21*R22*R32 + R11*R13*R32*R33 + R12*R13*R31*R33 + R12*R13*R32*R33 + R11*R22*R31*R32 + R12*R21*R31*R32 + R11*R22*R31*R33 + R12*R21*R31*R33 + R13*R21*R31*R32 + R11*R22*R32*R33 + R12*R21*R32*R33 + R13*R21*R31*R33 + R13*R22*R31*R32 + R13*R21*R32*R33 + R13*R22*R31*R33 + R13*R22*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R22*R32*R33))/(((R11*R12*R21*R22 + R11*R13*R21*R22 + R12*R13*R21*R22 + R11*R12*R21*R32 + R11*R12*R22*R31 + R11*R12*R21*R33 + R11*R13*R21*R32 + R11*R13*R22*R31 + R11*R12*R22*R33 + R11*R13*R21*R33 + R12*R13*R21*R32 + R12*R13*R22*R31 + R11*R13*R22*R33 + R12*R13*R21*R33 + R12*R13*R22*R33 + R11*R12*R31*R32 + R11*R21*R22*R32 + R12*R21*R22*R31 + R11*R12*R31*R33 + R11*R13*R31*R32 + R11*R21*R22*R33 + R13*R21*R22*R31 + R11*R12*R32*R33 + R11*R13*R31*R33 + R12*R13*R31*R32 + R12*R21*R22*R33 + R13*R21*R22*R32 + R11*R13*R32*R33 + R12*R13*R31*R33 + R12*R13*R32*R33 + R11*R22*R31*R32 + R12*R21*R31*R32 + R11*R22*R31*R33 + R12*R21*R31*R33 + R13*R21*R31*R32 + R11*R22*R32*R33 + R12*R21*R32*R33 + R13*R21*R31*R33 + R13*R22*R31*R32 + R13*R21*R32*R33 + R13*R22*R31*R33 + R13*R22*R32*R33 + R21*R22*R31*R32 + R21*R22*R31*R33 + R21*R22*R32*R33)/(R11*R12*R21 + R11*R12*R22 + R11*R13*R21 + R11*R13*R22 + R12*R13*R21 + R12*R13*R22 + R11*R12*R31 + R11*R12*R32 + R11*R13*R31 + R11*R13*R32 + R12*R13*R31 + R12*R13*R32 + R11*R21*R32 + R12*R21*R31 + R11*R21*R33 + R11*R22*R32 + R12*R22*R31 + R13*R21*R31 + R11*R22*R33 + R12*R21*R33 + R13*R21*R32 + R13*R22*R31 + R12*R22*R33 + R13*R22*R32 + R11*R31*R32 + R11*R31*R33 + R12*R31*R32 + R11*R32*R33 + R12*R31*R33 + R12*R32*R33 + R21*R31*R32 + R21*R31*R33 + R22*R31*R32 + R21*R32*R33 + R22*R31*R33 + R22*R32*R33) - 200271)*(R11*R12*R21 + R11*R12*R22 + R11*R13*R21 + R11*R13*R22 + R12*R13*R21 + R12*R13*R22 + R11*R12*R31 + R11*R12*R32 + R11*R13*R31 + R11*R13*R32 + R12*R13*R31 + R12*R13*R32 + R11*R21*R32 + R12*R21*R31 + R11*R21*R33 + R11*R22*R32 + R12*R22*R31 + R13*R21*R31 + R11*R22*R33 + R12*R21*R33 + R13*R21*R32 + R13*R22*R31 + R12*R22*R33 + R13*R22*R32 + R11*R31*R32 + R11*R31*R33 + R12*R31*R32 + R11*R32*R33 + R12*R31*R33 + R12*R32*R33 + R21*R31*R32 + R21*R31*R33 + R22*R31*R32 + R21*R32*R33 + R22*R31*R33 + R22*R32*R33)) - R23;
eqr(7) = (194177*(R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R13*R21*R22 + R11*R12*R22*R23 + R11*R13*R21*R23 + R12*R13*R21*R22 + R11*R13*R22*R23 + R12*R13*R21*R23 + R12*R13*R22*R23 + R11*R12*R21*R32 + R11*R12*R21*R33 + R11*R13*R21*R32 + R11*R12*R22*R33 + R11*R12*R23*R32 + R11*R13*R21*R33 + R12*R13*R21*R32 + R11*R13*R22*R33 + R11*R13*R23*R32 + R12*R13*R21*R33 + R12*R13*R22*R33 + R12*R13*R23*R32 + R11*R21*R22*R32 + R11*R21*R22*R33 + R11*R21*R23*R32 + R11*R12*R32*R33 + R11*R21*R23*R33 + R11*R22*R23*R32 + R12*R21*R22*R33 + R13*R21*R22*R32 + R11*R13*R32*R33 + R11*R22*R23*R33 + R12*R21*R23*R33 + R13*R21*R23*R32 + R12*R13*R32*R33 + R12*R22*R23*R33 + R13*R22*R23*R32 + R11*R22*R32*R33 + R12*R21*R32*R33 + R11*R23*R32*R33 + R13*R21*R32*R33 + R12*R23*R32*R33 + R13*R22*R32*R33 + R21*R22*R32*R33 + R21*R23*R32*R33 + R22*R23*R32*R33))/(((R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R13*R21*R22 + R11*R12*R22*R23 + R11*R13*R21*R23 + R12*R13*R21*R22 + R11*R13*R22*R23 + R12*R13*R21*R23 + R12*R13*R22*R23 + R11*R12*R21*R32 + R11*R12*R21*R33 + R11*R13*R21*R32 + R11*R12*R22*R33 + R11*R12*R23*R32 + R11*R13*R21*R33 + R12*R13*R21*R32 + R11*R13*R22*R33 + R11*R13*R23*R32 + R12*R13*R21*R33 + R12*R13*R22*R33 + R12*R13*R23*R32 + R11*R21*R22*R32 + R11*R21*R22*R33 + R11*R21*R23*R32 + R11*R12*R32*R33 + R11*R21*R23*R33 + R11*R22*R23*R32 + R12*R21*R22*R33 + R13*R21*R22*R32 + R11*R13*R32*R33 + R11*R22*R23*R33 + R12*R21*R23*R33 + R13*R21*R23*R32 + R12*R13*R32*R33 + R12*R22*R23*R33 + R13*R22*R23*R32 + R11*R22*R32*R33 + R12*R21*R32*R33 + R11*R23*R32*R33 + R13*R21*R32*R33 + R12*R23*R32*R33 + R13*R22*R32*R33 + R21*R22*R32*R33 + R21*R23*R32*R33 + R22*R23*R32*R33)/(R11*R12*R22 + R11*R12*R23 + R11*R13*R22 + R11*R13*R23 + R12*R13*R22 + R12*R13*R23 + R11*R12*R32 + R12*R21*R22 + R11*R12*R33 + R11*R13*R32 + R12*R21*R23 + R13*R21*R22 + R11*R13*R33 + R12*R13*R32 + R12*R22*R23 + R13*R21*R23 + R12*R13*R33 + R13*R22*R23 + R11*R22*R32 + R12*R21*R32 + R11*R22*R33 + R11*R23*R32 + R12*R21*R33 + R13*R21*R32 + R11*R23*R33 + R12*R23*R32 + R13*R21*R33 + R13*R22*R32 + R12*R23*R33 + R13*R22*R33 + R21*R22*R32 + R21*R22*R33 + R21*R23*R32 + R21*R23*R33 + R22*R23*R32 + R22*R23*R33) - 194177)*(R11*R12*R22 + R11*R12*R23 + R11*R13*R22 + R11*R13*R23 + R12*R13*R22 + R12*R13*R23 + R11*R12*R32 + R12*R21*R22 + R11*R12*R33 + R11*R13*R32 + R12*R21*R23 + R13*R21*R22 + R11*R13*R33 + R12*R13*R32 + R12*R22*R23 + R13*R21*R23 + R12*R13*R33 + R13*R22*R23 + R11*R22*R32 + R12*R21*R32 + R11*R22*R33 + R11*R23*R32 + R12*R21*R33 + R13*R21*R32 + R11*R23*R33 + R12*R23*R32 + R13*R21*R33 + R13*R22*R32 + R12*R23*R33 + R13*R22*R33 + R21*R22*R32 + R21*R22*R33 + R21*R23*R32 + R21*R23*R33 + R22*R23*R32 + R22*R23*R33)) - R31;
eqr(8) = (200271*(R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R13*R21*R22 + R11*R12*R22*R23 + R11*R13*R21*R23 + R12*R13*R21*R22 + R11*R13*R22*R23 + R12*R13*R21*R23 + R12*R13*R22*R23 + R11*R12*R22*R31 + R11*R12*R21*R33 + R11*R12*R23*R31 + R11*R13*R22*R31 + R11*R12*R22*R33 + R11*R13*R21*R33 + R11*R13*R23*R31 + R12*R13*R22*R31 + R11*R13*R22*R33 + R12*R13*R21*R33 + R12*R13*R23*R31 + R12*R13*R22*R33 + R12*R21*R22*R31 + R11*R12*R31*R33 + R11*R21*R22*R33 + R12*R21*R23*R31 + R13*R21*R22*R31 + R11*R13*R31*R33 + R11*R21*R23*R33 + R12*R21*R22*R33 + R12*R22*R23*R31 + R13*R21*R23*R31 + R11*R22*R23*R33 + R12*R13*R31*R33 + R12*R21*R23*R33 + R13*R22*R23*R31 + R12*R22*R23*R33 + R11*R22*R31*R33 + R12*R21*R31*R33 + R11*R23*R31*R33 + R13*R21*R31*R33 + R12*R23*R31*R33 + R13*R22*R31*R33 + R21*R22*R31*R33 + R21*R23*R31*R33 + R22*R23*R31*R33))/(((R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R13*R21*R22 + R11*R12*R22*R23 + R11*R13*R21*R23 + R12*R13*R21*R22 + R11*R13*R22*R23 + R12*R13*R21*R23 + R12*R13*R22*R23 + R11*R12*R22*R31 + R11*R12*R21*R33 + R11*R12*R23*R31 + R11*R13*R22*R31 + R11*R12*R22*R33 + R11*R13*R21*R33 + R11*R13*R23*R31 + R12*R13*R22*R31 + R11*R13*R22*R33 + R12*R13*R21*R33 + R12*R13*R23*R31 + R12*R13*R22*R33 + R12*R21*R22*R31 + R11*R12*R31*R33 + R11*R21*R22*R33 + R12*R21*R23*R31 + R13*R21*R22*R31 + R11*R13*R31*R33 + R11*R21*R23*R33 + R12*R21*R22*R33 + R12*R22*R23*R31 + R13*R21*R23*R31 + R11*R22*R23*R33 + R12*R13*R31*R33 + R12*R21*R23*R33 + R13*R22*R23*R31 + R12*R22*R23*R33 + R11*R22*R31*R33 + R12*R21*R31*R33 + R11*R23*R31*R33 + R13*R21*R31*R33 + R12*R23*R31*R33 + R13*R22*R31*R33 + R21*R22*R31*R33 + R21*R23*R31*R33 + R22*R23*R31*R33)/(R11*R12*R21 + R11*R13*R21 + R11*R12*R23 + R12*R13*R21 + R11*R13*R23 + R12*R13*R23 + R11*R12*R31 + R11*R21*R22 + R11*R13*R31 + R11*R21*R23 + R11*R12*R33 + R11*R22*R23 + R12*R13*R31 + R13*R21*R22 + R11*R13*R33 + R13*R21*R23 + R12*R13*R33 + R13*R22*R23 + R11*R22*R31 + R12*R21*R31 + R11*R23*R31 + R13*R21*R31 + R11*R22*R33 + R12*R21*R33 + R12*R23*R31 + R13*R22*R31 + R11*R23*R33 + R13*R21*R33 + R12*R23*R33 + R13*R22*R33 + R21*R22*R31 + R21*R23*R31 + R21*R22*R33 + R22*R23*R31 + R21*R23*R33 + R22*R23*R33) - 200271)*(R11*R12*R21 + R11*R13*R21 + R11*R12*R23 + R12*R13*R21 + R11*R13*R23 + R12*R13*R23 + R11*R12*R31 + R11*R21*R22 + R11*R13*R31 + R11*R21*R23 + R11*R12*R33 + R11*R22*R23 + R12*R13*R31 + R13*R21*R22 + R11*R13*R33 + R13*R21*R23 + R12*R13*R33 + R13*R22*R23 + R11*R22*R31 + R12*R21*R31 + R11*R23*R31 + R13*R21*R31 + R11*R22*R33 + R12*R21*R33 + R12*R23*R31 + R13*R22*R31 + R11*R23*R33 + R13*R21*R33 + R12*R23*R33 + R13*R22*R33 + R21*R22*R31 + R21*R23*R31 + R21*R22*R33 + R22*R23*R31 + R21*R23*R33 + R22*R23*R33)) - R32;
eqr(9) = (253233*(R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R13*R21*R22 + R11*R12*R22*R23 + R11*R13*R21*R23 + R12*R13*R21*R22 + R11*R13*R22*R23 + R12*R13*R21*R23 + R12*R13*R22*R23 + R11*R12*R21*R32 + R11*R12*R22*R31 + R11*R12*R23*R31 + R11*R13*R21*R32 + R11*R13*R22*R31 + R11*R12*R23*R32 + R11*R13*R23*R31 + R12*R13*R21*R32 + R12*R13*R22*R31 + R11*R13*R23*R32 + R12*R13*R23*R31 + R12*R13*R23*R32 + R11*R12*R31*R32 + R11*R21*R22*R32 + R12*R21*R22*R31 + R11*R13*R31*R32 + R11*R21*R23*R32 + R12*R21*R23*R31 + R13*R21*R22*R31 + R11*R22*R23*R32 + R12*R13*R31*R32 + R12*R22*R23*R31 + R13*R21*R22*R32 + R13*R21*R23*R31 + R13*R21*R23*R32 + R13*R22*R23*R31 + R13*R22*R23*R32 + R11*R22*R31*R32 + R12*R21*R31*R32 + R11*R23*R31*R32 + R13*R21*R31*R32 + R12*R23*R31*R32 + R13*R22*R31*R32 + R21*R22*R31*R32 + R21*R23*R31*R32 + R22*R23*R31*R32))/(((R11*R12*R21*R22 + R11*R12*R21*R23 + R11*R13*R21*R22 + R11*R12*R22*R23 + R11*R13*R21*R23 + R12*R13*R21*R22 + R11*R13*R22*R23 + R12*R13*R21*R23 + R12*R13*R22*R23 + R11*R12*R21*R32 + R11*R12*R22*R31 + R11*R12*R23*R31 + R11*R13*R21*R32 + R11*R13*R22*R31 + R11*R12*R23*R32 + R11*R13*R23*R31 + R12*R13*R21*R32 + R12*R13*R22*R31 + R11*R13*R23*R32 + R12*R13*R23*R31 + R12*R13*R23*R32 + R11*R12*R31*R32 + R11*R21*R22*R32 + R12*R21*R22*R31 + R11*R13*R31*R32 + R11*R21*R23*R32 + R12*R21*R23*R31 + R13*R21*R22*R31 + R11*R22*R23*R32 + R12*R13*R31*R32 + R12*R22*R23*R31 + R13*R21*R22*R32 + R13*R21*R23*R31 + R13*R21*R23*R32 + R13*R22*R23*R31 + R13*R22*R23*R32 + R11*R22*R31*R32 + R12*R21*R31*R32 + R11*R23*R31*R32 + R13*R21*R31*R32 + R12*R23*R31*R32 + R13*R22*R31*R32 + R21*R22*R31*R32 + R21*R23*R31*R32 + R22*R23*R31*R32)/(R11*R12*R21 + R11*R12*R22 + R11*R13*R21 + R11*R13*R22 + R12*R13*R21 + R12*R13*R22 + R11*R12*R31 + R11*R21*R22 + R11*R12*R32 + R11*R13*R31 + R11*R21*R23 + R12*R21*R22 + R11*R13*R32 + R11*R22*R23 + R12*R13*R31 + R12*R21*R23 + R12*R13*R32 + R12*R22*R23 + R11*R22*R31 + R12*R21*R31 + R11*R22*R32 + R11*R23*R31 + R12*R21*R32 + R13*R21*R31 + R11*R23*R32 + R12*R23*R31 + R13*R21*R32 + R13*R22*R31 + R12*R23*R32 + R13*R22*R32 + R21*R22*R31 + R21*R22*R32 + R21*R23*R31 + R21*R23*R32 + R22*R23*R31 + R22*R23*R32) - 253233)*(R11*R12*R21 + R11*R12*R22 + R11*R13*R21 + R11*R13*R22 + R12*R13*R21 + R12*R13*R22 + R11*R12*R31 + R11*R21*R22 + R11*R12*R32 + R11*R13*R31 + R11*R21*R23 + R12*R21*R22 + R11*R13*R32 + R11*R22*R23 + R12*R13*R31 + R12*R21*R23 + R12*R13*R32 + R12*R22*R23 + R11*R22*R31 + R12*R21*R31 + R11*R22*R32 + R11*R23*R31 + R12*R21*R32 + R13*R21*R31 + R11*R23*R32 + R12*R23*R31 + R13*R21*R32 + R13*R22*R31 + R12*R23*R32 + R13*R22*R32 + R21*R22*R31 + R21*R22*R32 + R21*R23*R31 + R21*R23*R32 + R22*R23*R31 + R22*R23*R32)) - R33;

% Custom options for the solve of nonlinear system of equations
options = optimoptions(@lsqnonlin, 'MaxFunctionEvaluations', 10000, 'MaxIterations', 10000, 'FunctionTolerance', 1e-7);
x0 = [1; 1; 1; 1; 1; 1; 1; 1; 1];
R = [R11; R12; R13; ...
     R21; R22; R23; ...
     R31; R32; R33];
functions = matlabFunction(eqr, 'Vars', {R});

% Range in which a solution is acceptable for each variable
lb = [MR11, MR12, MR13, MR21, MR22, MR23, MR31, MR32, MR33];
max_value = 1e6;
ub = ones(1, 9) * max_value;

sol = lsqnonlin(functions, x0, lb, ub, options);

% Reshape the solution into a 3x3 matrix
sol_matrix = reshape(sol, [3, 3]);

% Display the matrix
disp(sol_matrix);

